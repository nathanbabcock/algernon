/*
Auto-generated by: https://github.com/pmndrs/gltfjsx
*/

import { useGLTF } from '@react-three/drei'
import React, { useRef } from 'react'
import * as THREE from 'three'
import { GLTF } from 'three/examples/jsm/loaders/GLTFLoader'


type GLTFResult = GLTF & {
  nodes: {
    Mesh001: THREE.Mesh
    Mesh001_1: THREE.Mesh
    Mesh001_2: THREE.Mesh
    Mesh: THREE.Mesh
    Mesh_1: THREE.Mesh
  }
  materials: {
    lambert6: THREE.MeshStandardMaterial
    lambert4: THREE.MeshStandardMaterial
    lambert8: THREE.MeshStandardMaterial
    lambert5: THREE.MeshStandardMaterial
  }
}

export default function Whiteboard(props: JSX.IntrinsicElements['group']) {
  const group = useRef<THREE.Group>()
  const { nodes, materials } = useGLTF('models/whiteboard.glb') as GLTFResult
  return (
    <group ref={group} {...props} dispose={null}>
      <group position={[0, 0, 0.42]}>
        <mesh material={materials.lambert4} geometry={nodes.Mesh.geometry} />
        <mesh material={materials.lambert5} geometry={nodes.Mesh_1.geometry} />
      </group>
      <group position={[0, 0, 1.12]}>
        <mesh material={materials.lambert6} geometry={nodes.Mesh001.geometry} />
        <mesh material={materials.lambert4} geometry={nodes.Mesh001_1.geometry} />
        <mesh material={materials.lambert8} geometry={nodes.Mesh001_2.geometry} />
      </group>
    </group>
  )
}

useGLTF.preload('models/whiteboard.glb')
